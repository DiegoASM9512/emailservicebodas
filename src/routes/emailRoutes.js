const express = require('express');
const router = express.Router();
const emailController = require('../controllers/emailController');
const validationMiddleware = require('../middleware/validationMiddleware');

/**
 * @swagger
 * /api/email/rsvp:
 *   post:
 *     tags: [Email]
 *     summary: Env√≠a confirmaci√≥n de RSVP por email
 *     description: |
 *       Env√≠a un email de confirmaci√≥n elegante y personalizado al invitado con todos los detalles de su RSVP.
 *       
 *       **Caracter√≠sticas del email:**
 *       - ‚ú® Dise√±o hermoso y rom√°ntico espec√≠fico para bodas
 *       - üì± Responsive design que se ve bien en m√≥viles y desktop
 *       - üéØ Informaci√≥n clara y organizada de la confirmaci√≥n
 *       - üë• Lista detallada de acompa√±antes y sus men√∫s
 *       - ‚ö†Ô∏è Secci√≥n especial para alergias alimentarias
 *       - üíï Mensaje personalizado de los novios
 *       
 *       **Proceso:**
 *       1. Valida todos los datos del formulario
 *       2. Genera un email HTML hermoso con los detalles
 *       3. Env√≠a el email usando SendGrid
 *       4. Retorna confirmaci√≥n del env√≠o exitoso
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/RsvpData'
 *           examples:
 *             confirmacion_simple:
 *               summary: Confirmaci√≥n simple sin acompa√±antes
 *               value:
 *                 nombre: "Mar√≠a Gonz√°lez"
 *                 emailRemitente: "maria@ejemplo.com"
 *                 numeroAcompa√±antes: "0"
 *                 menu: "pollo"
 *                 agregarAcompa√±antes: false
 *                 mismoPlato: false
 *                 acompa√±antes: []
 *                 alergias: "Al√©rgica a los frutos secos"
 *             confirmacion_con_acompa√±antes:
 *               summary: Confirmaci√≥n con 2 acompa√±antes
 *               value:
 *                 nombre: "Juan Carlos P√©rez"
 *                 emailRemitente: "juan.perez@gmail.com"
 *                 numeroAcompa√±antes: "2"
 *                 menu: "pescado"
 *                 alergias: "Al√©rgico a los mariscos"
 *                 agregarAcompa√±antes: true
 *                 mismoPlato: false
 *                 acompa√±antes:
 *                   - nombre: "Ana Mar√≠a L√≥pez"
 *                     platillo: "vegetariano"
 *                     alergias: "Al√©rgica a los frutos secos"
 *                   - nombre: "Carlos Roberto D√≠az"
 *                     platillo: "pasta"
 *                     alergias: "Intolerante a la lactosa"

 *             confirmacion_con_alergias:
 *               summary: Confirmaci√≥n con restricciones alimentarias
 *               value:
 *                 nombre: "Sof√≠a Mart√≠nez"
 *                 emailRemitente: "sofia.martinez@hotmail.com"
 *                 numeroAcompa√±antes: "1"
 *                 menu: "vegetariano"
 *                 alergias: "Vegetariana estricta"
 *                 agregarAcompa√±antes: true
 *                 mismoPlato: false
 *                 acompa√±antes:
 *                   - nombre: "Miguel √Ångel Torres"
 *                     platillo: "pollo"
 *                     alergias: "Al√©rgico al gluten"

 *     responses:
 *       200:
 *         description: Email enviado exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               allOf:
 *                 - $ref: '#/components/schemas/SuccessResponse'
 *                 - type: object
 *                   properties:
 *                     data:
 *                       type: object
 *                       properties:
 *                         messageId:
 *                           type: string
 *                           description: ID √∫nico del mensaje enviado por SendGrid
 *                           example: "14c5d75ce93.dfd.64b469cdff.20190424-155228.4492.0@ismtpd0021p1las1.sendgrid.net"
 *                         recipient:
 *                           type: string
 *                           format: email
 *                           description: Email del destinatario
 *                           example: "maria@ejemplo.com"
 *                         timestamp:
 *                           type: string
 *                           format: date-time
 *                           example: "2025-06-30T10:30:00.000Z"
 *             example:
 *               success: true
 *               message: "Confirmaci√≥n enviada exitosamente"
 *               data:
 *                 messageId: "14c5d75ce93.dfd.64b469cdff.20190424-155228.4492.0@ismtpd0021p1las1.sendgrid.net"
 *                 recipient: "maria@ejemplo.com"
 *                 timestamp: "2025-06-30T10:30:00.000Z"
 *               timestamp: "2025-06-30T10:30:00.000Z"
 *       400:
 *         description: Error de validaci√≥n en los datos enviados
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/ValidationError'
 *             examples:
 *               email_invalido:
 *                 summary: Email con formato inv√°lido
 *                 value:
 *                   success: false
 *                   message: "Datos de validaci√≥n incorrectos"
 *                   error:
 *                     - field: "emailRemitente"
 *                       message: "Debes proporcionar un email v√°lido"
 *                   code: "VALIDATION_ERROR"
 *                   timestamp: "2025-06-30T10:30:00.000Z"
 *               menu_invalido:
 *                 summary: Opci√≥n de men√∫ no v√°lida
 *                 value:
 *                   success: false
 *                   message: "Datos de validaci√≥n incorrectos"
 *                   error:
 *                     - field: "menu"
 *                       message: "Debes seleccionar un men√∫ v√°lido"
 *                   code: "VALIDATION_ERROR"
 *                   timestamp: "2025-06-30T10:30:00.000Z"
 *               acompa√±antes_inconsistentes:
 *                 summary: N√∫mero de acompa√±antes no coincide con la lista
 *                 value:
 *                   success: false
 *                   message: "Datos de validaci√≥n incorrectos"
 *                   error:
 *                     - field: "acompa√±antes"
 *                       message: "Debes agregar exactamente 2 acompa√±ante(s)"
 *                   code: "VALIDATION_ERROR"
 *                   timestamp: "2025-06-30T10:30:00.000Z"
 *       429:
 *         description: Demasiadas solicitudes (rate limit excedido)
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/ErrorResponse'
 *             example:
 *               success: false
 *               message: "Demasiadas solicitudes, intenta nuevamente en un minuto"
 *               code: "RATE_LIMIT_EXCEEDED"
 *               timestamp: "2025-06-30T10:30:00.000Z"
 *       500:
 *         description: Error interno del servidor o problema con SendGrid
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/ErrorResponse'
 *             examples:
 *               error_sendgrid:
 *                 summary: Error de SendGrid
 *                 value:
 *                   success: false
 *                   message: "Error enviando confirmaci√≥n"
 *                   error: "Error 400: The provided authorization grant is invalid, expired, or revoked"
 *                   code: "EMAIL_SEND_ERROR"
 *                   timestamp: "2025-06-30T10:30:00.000Z"
 *               error_interno:
 *                 summary: Error interno del servidor
 *                 value:
 *                   success: false
 *                   message: "Error interno del servidor"
 *                   error: "Ocurri√≥ un error inesperado"
 *                   code: "INTERNAL_ERROR"
 *                   timestamp: "2025-06-30T10:30:00.000Z"
 */
router.post('/rsvp', 
  validationMiddleware.validateJsonContent,
  emailController.sendRsvpConfirmation
);

/**
 * @swagger
 * /api/email/status:
 *   get:
 *     tags: [Email]
 *     summary: Verifica el estado del servicio de email
 *     description: |
 *       Verifica que el servicio de SendGrid est√© funcionando correctamente y que la configuraci√≥n sea v√°lida.
 *       
 *       **Lo que verifica:**
 *       - ‚úÖ Conectividad con SendGrid
 *       - üîë Validez de la API Key
 *       - üìß Email remitente configurado correctamente
 *       - üöÄ Estado general del servicio
 *       
 *       **√ötil para:**
 *       - Monitoreo del servicio
 *       - Diagn√≥stico de problemas
 *       - Health checks autom√°ticos
 *     responses:
 *       200:
 *         description: Servicio de email funcionando correctamente
 *         content:
 *           application/json:
 *             schema:
 *               allOf:
 *                 - $ref: '#/components/schemas/SuccessResponse'
 *                 - type: object
 *                   properties:
 *                     data:
 *                       type: object
 *                       properties:
 *                         status:
 *                           type: string
 *                           example: "operational"
 *                         timestamp:
 *                           type: string
 *                           format: date-time
 *             example:
 *               success: true
 *               message: "Servicio de email funcionando correctamente"
 *               data:
 *                 status: "operational"
 *                 timestamp: "2025-06-30T10:30:00.000Z"
 *               timestamp: "2025-06-30T10:30:00.000Z"
 *       503:
 *         description: Servicio de email no disponible
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/ErrorResponse'
 *             examples:
 *               api_key_invalida:
 *                 summary: API Key de SendGrid inv√°lida
 *                 value:
 *                   success: false
 *                   message: "Servicio de email no disponible"
 *                   error: "The provided authorization grant is invalid, expired, or revoked"
 *                   code: "SERVICE_UNAVAILABLE"
 *                   timestamp: "2025-06-30T10:30:00.000Z"
 *               conectividad:
 *                 summary: Problema de conectividad
 *                 value:
 *                   success: false
 *                   message: "Servicio de email no disponible"
 *                   error: "Network timeout"
 *                   code: "SERVICE_UNAVAILABLE"
 *                   timestamp: "2025-06-30T10:30:00.000Z"
 *       500:
 *         description: Error verificando el servicio
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/ErrorResponse'
 */
router.get('/status', emailController.checkEmailServiceStatus);

/**
 * @swagger
 * /api/email/test:
 *   post:
 *     tags: [Testing]
 *     summary: Env√≠a un email de prueba
 *     description: |
 *       Env√≠a un email de prueba con datos de ejemplo para verificar que todo funcione correctamente.
 *       
 *       **‚ö†Ô∏è Solo para desarrollo y testing**
 *       
 *       **Qu√© hace:**
 *       - üìß Env√≠a un email con datos de prueba predefinidos
 *       - üé® Usa el mismo template que los emails reales
 *       - ‚úÖ Verifica toda la cadena de env√≠o
 *       - üîç √ötil para debuggear problemas de configuraci√≥n
 *       
 *       **Datos de prueba incluidos:**
 *       - Invitado: "Usuario de Prueba"
 *       - 1 acompa√±ante: "Acompa√±ante de Prueba"
 *       - Diferentes opciones de men√∫
 *       - Alergias de ejemplo
 *     requestBody:
 *       required: true
 *       content:
 *         application/json:
 *           schema:
 *             $ref: '#/components/schemas/TestEmailRequest'
 *           example:
 *             email: "test@ejemplo.com"
 *     responses:
 *       200:
 *         description: Email de prueba enviado exitosamente
 *         content:
 *           application/json:
 *             schema:
 *               allOf:
 *                 - $ref: '#/components/schemas/SuccessResponse'
 *                 - type: object
 *                   properties:
 *                     data:
 *                       type: object
 *                       properties:
 *                         messageId:
 *                           type: string
 *                           description: ID del mensaje de SendGrid
 *                         recipient:
 *                           type: string
 *                           format: email
 *                           description: Email donde se envi√≥ la prueba
 *                         timestamp:
 *                           type: string
 *                           format: date-time
 *             example:
 *               success: true
 *               message: "Email de prueba enviado exitosamente"
 *               data:
 *                 messageId: "14c5d75ce93.dfd.64b469cdff.20190424-155228.4492.0@ismtpd0021p1las1.sendgrid.net"
 *                 recipient: "test@ejemplo.com"
 *                 timestamp: "2025-06-30T10:30:00.000Z"
 *               timestamp: "2025-06-30T10:30:00.000Z"
 *       400:
 *         description: Email no proporcionado o inv√°lido
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/ErrorResponse'
 *             examples:
 *               email_faltante:
 *                 summary: Email no enviado en la petici√≥n
 *                 value:
 *                   success: false
 *                   message: "Email requerido"
 *                   error: "Debes proporcionar un email para la prueba"
 *                   code: "MISSING_EMAIL"
 *                   timestamp: "2025-06-30T10:30:00.000Z"
 *               email_invalido:
 *                 summary: Formato de email inv√°lido
 *                 value:
 *                   success: false
 *                   message: "Tipo de contenido inv√°lido"
 *                   error: "El Content-Type debe ser application/json"
 *                   code: "INVALID_CONTENT_TYPE"
 *                   timestamp: "2025-06-30T10:30:00.000Z"
 *       500:
 *         description: Error enviando email de prueba
 *         content:
 *           application/json:
 *             schema:
 *               $ref: '#/components/schemas/ErrorResponse'
 */
router.post('/test', 
  validationMiddleware.validateJsonContent,
  emailController.sendTestEmail
);

module.exports = router;
